@rendermode InteractiveServer
@using AnonymousDataExplorer.Services
@inject DatabaseService DbService

<h4>Výběr tabulky</h4>

@if (Tables.Count == 0)
{
    <p style="color:red">Žádné tabulky nenalezeny</p>
}
else
{
    <select @onchange="OnTableChanged">
        <option value="">-- vyber tabulku --</option>
        @foreach (var table in Tables)
        {
            <option value="@table">@table</option>
        }
    </select>
}

@if (!string.IsNullOrEmpty(SelectedTable) && ColumnNames.Count > 0)
{
    <h4>Data v tabulce @SelectedTable</h4>
    <table class="table">
        <thead>
            <tr>
                @foreach (var col in ColumnNames)
                {
                    <th>@col</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var row in DataRows)
            {
                <tr>
                    @foreach (var col in ColumnNames)
                    {
                        <td>@(row.TryGetValue(col, out var val) ? val : "")</td>
                    }
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<string> Tables = new();
    private string? SelectedTable;
    private List<string> ColumnNames = new();
    private List<Dictionary<string, object>> DataRows = new();

    protected override async Task OnInitializedAsync()
    {
        Tables = await DbService.GetTableNamesAsync();
    }

    private async Task OnTableChanged(ChangeEventArgs e)
    {
        SelectedTable = e.Value?.ToString();
        Console.WriteLine($"Vybraná tabulka: {SelectedTable}");

        if (!string.IsNullOrEmpty(SelectedTable))
        {
            ColumnNames = await DbService.GetColumnNamesOnlyAsync(SelectedTable);
            DataRows = await DbService.GetDataRowsAsync(SelectedTable);
        }
        else
        {
            ColumnNames.Clear();
            DataRows.Clear();
        }

        StateHasChanged();
    }
}
